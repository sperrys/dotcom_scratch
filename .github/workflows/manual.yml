# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scrape"
  scrape:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Repo Code 
      uses: actions/checkout@v4
    - name: Generate Branch Name
      id: branch-name
      run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          echo "branch_name=add-markdown-scanner-${TIMESTAMP}" >> $GITHUB_OUTPUT
    - name: Create Branch
      run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout -b ${{ steps.branch-name.outputs.branch_name }}
    - name: Find HTTP URLs in markdown files
      run: |
        # Find all markdown files and search for HTTP URLs
        find . -type f -name "*.md" -exec grep -Hn "http://" {} \; > http_urls.txt
    
        # Check if any HTTP URLs were found
        if [ -s http_urls.txt ]; then
          echo "::warning ::Found HTTP URLs in markdown files:"
          cat http_urls.txt
          # Optional: fail the workflow if HTTP URLs are found
          # exit 1
        else
          echo "No HTTP URLs found in markdown files"
        fi
    - name: Commit and Push
      run: |
          git add http_urls.txt
          git commit -m "Add Scraped images"
          git push origin ${{ steps.branch-name.outputs.branch_name }}
    - name: Create Pull Request
      run: gh pr create -B main -H ${{ steps.branch-name.outputs.branch_name }} --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
